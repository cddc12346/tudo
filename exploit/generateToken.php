#!/usr/bin/env php
<?php

/**
 * 32-hex-char token (16 random bytes). Increase $bytes for longer tokens.
 */
function generateToken() {
    // CLI
    // echo round(microtime(true) * 1000), PHP_EOL;

    srand(round(microtime(true) * 1000));
    $chars = 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789_';
    $ret = '';
    for ($i = 0; $i < 32; $i++) {
        $ret .= $chars[rand(0,strlen($chars)-1)];
    }
    return $ret;
}

echo "Start going!\n";

$count    = 200000;
$filename = $argv[1] ?? 'tokens.txt';

$fh = fopen($filename, 'wb');
if ($fh === false) {
    fwrite(STDERR, "Failed to open $filename for writing.\n");
    exit(1);
}
if (!flock($fh, LOCK_EX)) {
    fwrite(STDERR, "Failed to lock $filename.\n");
    fclose($fh);
    exit(1);
}

for ($i = 0; $i < $count; $i++) {
    try {
        $token = generateToken(); // 32 hex chars
    } catch (Throwable $e) {
        fwrite(STDERR, "random_bytes() failed at $i: " . $e->getMessage() . "\n");
        fclose($fh);
        exit(1);
    }
    fwrite($fh, $token . PHP_EOL);
}

flock($fh, LOCK_UN);
fclose($fh);

echo "Wrote $count tokens to $filename\n";
